version: '2'
services:
  postgres:
    env_file:
      - ./env.env
    image: postgres:9.5.1
    volumes:
      - "${PGDATA}:/var/lib/postgresql/data"
  redis:
    env_file:
      - ./env.env
    image: redis:3.0.7
    command: /usr/local/bin/redis-server --appendonly yes
    volumes:
      - "${REDIS_DATA_DIR}:/data"
  escalade-rails:
    env_file:
      - ./env.env
    image: adamvduke/escalade-rails-docker
    volumes:
      - /srv/escalade-rails/current/public
    depends_on:
      - postgres
      - redis
  escalade-sidekiq:
    env_file:
      - ./env.env
    image: adamvduke/escalade-rails-docker
    environment:
      RUN_ENTRYPOINT: 0
    command: bundle exec sidekiq
    volumes:
      - "${CADDY_CONFIG_DIR}:/srv/escalade/caddy/config"
      - "${CADDY_SITES_DIR}:/srv/sites"
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - postgres
      - redis
  escalade-caddy:
    container_name: escalade-caddy
    env_file:
      - ./env.env
    image: adamvduke/escalade-caddy-docker
    command: /caddy -conf="/srv/escalade/caddy/config/Caddyfile" -log="/dev/stdout"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "${CADDY_TLS_DATA_DIR}:/root/.caddy"
      - "${CADDY_CONFIG_DIR}:/srv/escalade/caddy/config"
      - "${CADDY_SITES_DIR}:/srv/sites"
    volumes_from:
      - escalade-rails
    depends_on:
      - escalade-sidekiq
      - escalade-rails
